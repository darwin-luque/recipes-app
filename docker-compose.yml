version: '3'
services:
  db:
    image: postgres
    container_name: database
    restart: always
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: test
    ports:
      - '5432:5432'
    volumes:
      - ./data/postgres:/var/lib/postgresql/data/
  redis:
    image: redis:latest
    command:
      - 'redis-server'
    ports:
      - '6379:6379'
  backend:
    build:
      context: ./backend
      dockerfile: ./Dockerfile
    ports:
      - '3002:3000'
    volumes:
      - ./backend:/app/backend
    environment:
      NODE_ENV: development
      REDIS_HOST: redis
      DB_HOST: db
      DB_USER: test
      DB_PASSWORD: test
      DB_DATABASE: test
    depends_on:
      - db
      - redis
  cms:
    build:
      context: ./cms
      dockerfile: Dockerfile
    ports:
      - '3001:3000'
    volumes:
      - ./cms:/app/cms
    environment:
      - NODE_ENV=development
      - REACT_APP_BACKEND_URL=http://backend:3002
    depends_on:
      - backend
  ui:
    build:
      context: ./ui
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    volumes:
      - ./ui:/app/ui
    environment:
      - NODE_ENV=development
      - NEXT_APP_BACKEND_URL=http://backend:3002
    depends_on:
      - backend
